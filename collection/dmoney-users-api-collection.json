{
	"info": {
		"_postman_id": "8b34d746-2629-492f-83cd-7a8b12df9433",
		"name": "dmoney-users-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44303613",
		"_collection_link": "https://sadiasobhana.postman.co/workspace/Sadia-Sobhana's-Workspace~df36cbb0-ac87-439f-8ee6-ab8d500b3ece/collection/44303613-8b34d746-2629-492f-83cd-7a8b12df9433?action=share&source=collection_link&creator=44303613"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonresponse = pm.response.json();\r",
									"console.log(jsonresponse.token) \r",
									"pm.collectionVariables.set(\"token\",jsonresponse.token)\r",
									"pm.environment.set(\"token\",jsonresponse.token)\r",
									"\r",
									"pm.test(\"Verify user login is successful\"), function(){\r",
									"    pm.expect(jsonresponse.message).contains(\"Login successful\")\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login with Wrong creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonresponse = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Verify user cant login with wrong creds\", function(){\r",
									"    pm.expect(jsonresponse.message).contains(\"Password incorrect\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"124\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User list",
			"item": [
				{
					"name": "User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"pm.test(\"Verify if user list is showing\",function(){\r",
									"    pm.expect(responseData.message).contains(\"User list\")\r",
									"    pm.expect(responseData.count).to.equal(5);\r",
									"    pm.expect(responseData.users.length).to.greaterThan(0)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/list?limit=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User List for negative limit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json();\r",
									"pm.test(\"Verify server is showing validation error\",function(){\r",
									"    pm.expect(responseData.message).contains(\"Error listing users\")\r",
									"\r",
									"    pm.test(\"Status code is 500\", function () {\r",
									"        pm.response.to.have.status(500);\r",
									"    });\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/list?limit=-5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "-5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonresponse = pm.response.json();\r",
									"const customerId = jsonresponse.user.id\r",
									"pm.collectionVariables.set(\"customerId\",jsonresponse.user.id)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const lodash = require('lodash')\r",
									"const prefix = \"0151\"\r",
									"const randomNumber = lodash.random(1000000,9999999)\r",
									"const customerPhoneNumber = prefix+randomNumber;\r",
									"pm.collectionVariables.set(\"customerPhoneNumber\",customerPhoneNumber)\r",
									"pm.environment.set(\"customerPhoneNumber\",customerPhoneNumber)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"@#$123$0^\",\r\n  \"phone_number\": \"{{customerPhoneNumber}}\",\r\n  \"nid\": \"65987412\",\r\n  \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonresponse = pm.response.json();\r",
									"const customerId = jsonresponse.user.id\r",
									"pm.collectionVariables.set(\"agentId\",jsonresponse.user.id)\r",
									"pm.environment.set(\"agentId\",jsonresponse.user.id)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const lodash = require('lodash')\r",
									"const prefix = \"0151\"\r",
									"const randomNumber = lodash.random(1000000,9999999)\r",
									"const agentPhoneNumber = prefix+randomNumber;\r",
									"pm.collectionVariables.set(\"agentPhoneNumber\",agentPhoneNumber)\r",
									"pm.environment.set(\"agentPhoneNumber\",agentPhoneNumber)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"@#$123$0^\",\r\n  \"phone_number\": \"{{agentPhoneNumber}}\",\r\n  \"nid\": \"65987412\",\r\n  \"role\": \"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Existing User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify user cant created wih existing email\"),function(){\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).contains(\"User already exists\")\r",
									"}\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"Kallie_Corwin17@gmail.com\",\r\n  \"password\": \"@#$123$0^\",\r\n  \"phone_number\": \"{{customerPhoneNumber}}\",\r\n  \"nid\": \"65987412\",\r\n  \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search User",
			"item": [
				{
					"name": "Search User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify user is found\"),function(){\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).contains(\"User is found\")\r",
									"}\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"{{customerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify user not found validation error\"),function(){\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.message).contains(\"User not found\")\r",
									"}\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"15"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update user",
			"item": [
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"MS. Sadia\",\r\n  \"email\": \"sadia123@gmail.com\",\r\n  \"password\": \"@#$123$%^\",\r\n  \"phone_number\": \"01217015288\",\r\n  \"nid\": \"1472522\",\r\n  \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{customerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"MS. Sadia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{customerId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete user",
			"item": [
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{secretKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/delete/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"delete",
								"{{customerId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiYWRtaW5Acm9hZHRvY2FyZWVyLm5ldCIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTc0NTc3MTI2NywiZXhwIjoxNzQ1Nzc0ODY3fQ.fgE4zXpD8EflcGcbGHgXpAKoEG1d0IUHOyEQeWDh3Lw",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "customerId",
			"value": 75816
		},
		{
			"key": "customerPhoneNumber",
			"value": "01515320894"
		},
		{
			"key": "secretKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "agentPhoneNumber",
			"value": "01517614573"
		},
		{
			"key": "agentId",
			"value": 75817
		}
	]
}